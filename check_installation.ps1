# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è LFP-TGbot-LLM-RAG
# –ó–∞–ø—É—Å–∫: .\check_installation.ps1

Write-Host "üîç –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò –û–ö–†–£–ñ–ï–ù–ò–Ø" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Cyan

$envName = "lfp_bot_py311"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
try {
    $envs = conda env list --json | ConvertFrom-Json
    $envExists = $envs.envs -match $envName -or $envs.envs -match [regex]::Escape($envName)
    
    if ($envExists) {
        Write-Host "   ‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ '$envName' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå –û–∫—Ä—É–∂–µ–Ω–∏–µ '$envName' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -ForegroundColor Red
        Write-Host "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ .\setup_env.ps1" -ForegroundColor Cyan
        exit 1
    }
} catch {
    Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
Write-Host "`n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏..." -ForegroundColor Yellow
try {
    $pythonVersion = conda run -n $envName python --version
    Write-Host "   ‚úÖ Python –≤–µ—Ä—Å–∏—è: $pythonVersion" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —ç—Ç–æ Python 3.11
    if ($pythonVersion -match "Python 3\.11") {
        Write-Host "   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Python 3.11" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Python (–Ω—É–∂–Ω–∞ 3.11)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Python: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞–∫–µ—Ç–æ–≤
Write-Host "`n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞–∫–µ—Ç–æ–≤..." -ForegroundColor Yellow
$criticalPackages = @(
    "torch",
    "transformers", 
    "python-telegram-bot",
    "flask",
    "langchain",
    "chromadb"
)

$missingPackages = @()
foreach ($pkg in $criticalPackages) {
    try {
        $installed = conda run -n $envName pip show $pkg
        if ($installed) {
            $version = ($installed | Select-String "Version:").ToString().Split(":")[1].Trim()
            Write-Host "   ‚úÖ $pkg (–≤–µ—Ä—Å–∏—è: $version)" -ForegroundColor Green
        } else {
            $missingPackages += $pkg
        }
    } catch {
        $missingPackages += $pkg
    }
}

if ($missingPackages.Count -gt 0) {
    Write-Host "   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: $($missingPackages -join ', ')" -ForegroundColor Red
    Write-Host "   üí° –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: .\setup_env.ps1" -ForegroundColor Cyan
} else {
    Write-Host "   ‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Intel XPU –ø–∞–∫–µ—Ç–æ–≤
Write-Host "`n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Intel XPU –ø–∞–∫–µ—Ç–æ–≤..." -ForegroundColor Yellow
$xpuPackages = @(
    "intel-extension-for-pytorch",
    "ipex-llm"
)

$xpuMissing = @()
foreach ($pkg in $xpuPackages) {
    try {
        $installed = conda run -n $envName pip show $pkg
        if ($installed) {
            $version = ($installed | Select-String "Version:").ToString().Split(":")[1].Trim()
            Write-Host "   ‚úÖ $pkg (–≤–µ—Ä—Å–∏—è: $version)" -ForegroundColor Green
        } else {
            $xpuMissing += $pkg
        }
    } catch {
        $xpuMissing += $pkg
    }
}

if ($xpuMissing.Count -gt 0) {
    Write-Host "   ‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç XPU –ø–∞–∫–µ—Ç—ã: $($xpuMissing -join ', ')" -ForegroundColor Yellow
    Write-Host "   üí° Intel Arc –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Cyan
} else {
    Write-Host "   ‚úÖ Intel XPU –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
Write-Host "`n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow
$envFile = ".\.env"
if (Test-Path $envFile) {
    Write-Host "   ‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    $envContent = Get-Content $envFile
    $requiredVars = @("TELEGRAM_TOKEN", "HUGGINGFACEHUB_API_TOKEN")
    $missingVars = @()
    
    foreach ($var in $requiredVars) {
        if ($envContent -match "^$var=") {
            Write-Host "   ‚úÖ $var –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
        } else {
            $missingVars += $var
        }
    }
    
    if ($missingVars.Count -gt 0) {
        Write-Host "   ‚ö†Ô∏è  –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: $($missingVars -join ', ')" -ForegroundColor Yellow
        Write-Host "   üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env" -ForegroundColor Cyan
    }
} else {
    Write-Host "   ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ .\setup_env.ps1 –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è" -ForegroundColor Cyan
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "`n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
$requiredFiles = @(
    "bot.py",
    "chains.py", 
    "embeddings.py",
    "requirements.txt",
    "start_bot.ps1"
)

$missingFiles = @()
foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "   ‚úÖ $file" -ForegroundColor Green
    } else {
        $missingFiles += $file
    }
}

if ($missingFiles.Count -gt 0) {
    Write-Host "   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: $($missingFiles -join ', ')" -ForegroundColor Red
} else {
    Write-Host "   ‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
Write-Host "`n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π..." -ForegroundColor Yellow
$knowledgeDir = ".\knowledge_base"
if (Test-Path $knowledgeDir) {
    $files = Get-ChildItem $knowledgeDir -File
    Write-Host "   ‚úÖ –ü–∞–ø–∫–∞ knowledge_base —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    Write-Host "   üìÅ –§–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: $($files.Count)" -ForegroundColor Green
    
    foreach ($file in $files) {
        Write-Host "     - $($file.Name)" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ö†Ô∏è  –ü–∞–ø–∫–∞ knowledge_base –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Yellow
}

Write-Host "`n" + "=" * 60 -ForegroundColor Cyan
Write-Host "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò –£–°–¢–ê–ù–û–í–ö–ò" -ForegroundColor Cyan

if ($missingPackages.Count -eq 0 -and $missingFiles.Count -eq 0) {
    Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "`nüí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∑–∞–ø—É—Å—Ç–∏—Ç–µ python test_intel_arc.py" -ForegroundColor Yellow
} else {
    Write-Host "‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π" -ForegroundColor Yellow
    Write-Host "üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É" -ForegroundColor Cyan
} 