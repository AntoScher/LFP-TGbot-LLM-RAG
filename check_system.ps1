# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π LFP-TGbot-LLM-RAG
# –ó–∞–ø—É—Å–∫: .\check_system.ps1

Write-Host "üîç –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –î–õ–Ø LFP-TGbot-LLM-RAG" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
Write-Host "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell..." -ForegroundColor Yellow
$psVersion = $PSVersionTable.PSVersion
Write-Host "   PowerShell –≤–µ—Ä—Å–∏—è: $psVersion" -ForegroundColor Green

if ($psVersion.Major -lt 5) {
    Write-Host "   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è PowerShell 5.1 –∏–ª–∏ –≤—ã—à–µ" -ForegroundColor Yellow
} else {
    Write-Host "   ‚úÖ PowerShell –≤–µ—Ä—Å–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Windows –≤–µ—Ä—Å–∏–∏
Write-Host "`n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Windows..." -ForegroundColor Yellow
$osInfo = Get-ComputerInfo | Select-Object WindowsProductName, WindowsVersion
Write-Host "   –û–°: $($osInfo.WindowsProductName)" -ForegroundColor Green
Write-Host "   –í–µ—Ä—Å–∏—è: $($osInfo.WindowsVersion)" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
$arch = [Environment]::Is64BitOperatingSystem
if ($arch) {
    Write-Host "   ‚úÖ 64-–±–∏—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è 64-–±–∏—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–∞–º—è—Ç–∏
Write-Host "`n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏..." -ForegroundColor Yellow
$memory = Get-CimInstance -ClassName Win32_ComputerSystem | Select-Object TotalPhysicalMemory
$memoryGB = [math]::Round($memory.TotalPhysicalMemory / 1GB, 1)
Write-Host "   –î–æ—Å—Ç—É–ø–Ω–∞—è –ø–∞–º—è—Ç—å: $memoryGB GB" -ForegroundColor Green

if ($memoryGB -lt 8) {
    Write-Host "   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 8 GB RAM" -ForegroundColor Yellow
} else {
    Write-Host "   ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
Write-Host "`n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞..." -ForegroundColor Yellow
$drive = Get-PSDrive C
$freeSpaceGB = [math]::Round($drive.Free / 1GB, 1)
Write-Host "   –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ C: $freeSpaceGB GB" -ForegroundColor Green

if ($freeSpaceGB -lt 10) {
    Write-Host "   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 10 GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞" -ForegroundColor Yellow
} else {
    Write-Host "   ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Conda
Write-Host "`n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Conda..." -ForegroundColor Yellow
try {
    $condaVersion = conda --version
    Write-Host "   ‚úÖ Conda —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $condaVersion" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ conda
    $condaPath = Get-Command conda -ErrorAction SilentlyContinue
    if ($condaPath) {
        Write-Host "   ‚úÖ Conda –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  Conda –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå Conda –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    Write-Host "   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Miniconda: https://docs.conda.io/en/latest/miniconda.html" -ForegroundColor Cyan
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
Write-Host "`n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Git..." -ForegroundColor Yellow
try {
    $gitVersion = git --version
    Write-Host "   ‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
Write-Host "`n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "https://www.google.com" -TimeoutSec 10 -UseBasicParsing
    Write-Host "   ‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º" -ForegroundColor Red
    Write-Host "   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É" -ForegroundColor Cyan
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Intel Arc (–µ—Å–ª–∏ –µ—Å—Ç—å)
Write-Host "`n8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Intel Arc..." -ForegroundColor Yellow
try {
    $gpuInfo = Get-CimInstance -ClassName Win32_VideoController -ErrorAction SilentlyContinue | Where-Object { $_.Name -like "*Intel*Arc*" }
    if ($gpuInfo) {
        Write-Host "   ‚úÖ Intel Arc –æ–±–Ω–∞—Ä—É–∂–µ–Ω: $($gpuInfo.Name)" -ForegroundColor Green
        if ($gpuInfo.AdapterRAM) {
            Write-Host "   üíæ –í–∏–¥–µ–æ–ø–∞–º—è—Ç—å: $([math]::Round($gpuInfo.AdapterRAM / 1GB, 1)) GB" -ForegroundColor Green
        }
    } else {
        Write-Host "   ‚ÑπÔ∏è  Intel Arc –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è CPU)" -ForegroundColor Blue
    }
} catch {
    Write-Host "   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å GPU" -ForegroundColor Yellow
}

Write-Host "`n" + "=" * 60 -ForegroundColor Cyan
Write-Host "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò –°–ò–°–¢–ï–ú–´" -ForegroundColor Cyan
Write-Host "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ LFP-TGbot-LLM-RAG" -ForegroundColor Green
Write-Host "`nüí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∑–∞–ø—É—Å—Ç–∏—Ç–µ .\setup_env.ps1" -ForegroundColor Yellow 